<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="vm"
            type="com.kotlin.practice.MainPageViewModel"/>
    </data>
    <androidx.constraintlayout.widget.ConstraintLayout
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">

        <LinearLayout
            android:orientation="vertical"
            android:id="@+id/vary_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

<!--            Navigation 组件旨在用于具有一个主 activity 和多个 fragment 目的地的应用。！！在具有多个 activity 目的地的应用中，每个 activity 均拥有其自己的导航图！！-->
<!--            navigation添加路由容器信息，保持一个Activity,其他页面通过fragment切换-->

<!--            以下属性 是必写的属性固定写法-->
<!--            android:name 属性包含 NavHost 实现的类名称（如果不需要额外自定义，使用api类即可）-->
<!--            app:defaultNavHost="true" 属性确保您的 NavHostFragment 会拦截系统返回按钮（注意，只能有一个默认 NavHost）-->
<!--            app:navGraph 属性将 NavHostFragment 与导航图相关联。导航图会在此 NavHostFragment 中指定用户可以导航到的所有目的地-->

<!--            一定要设置id-->
            <androidx.fragment.app.FragmentContainerView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:id="@+id/nav_host_fragment"

                android:name="androidx.navigation.fragment.NavHostFragment"

                app:defaultNavHost = "true"
                app:navGraph="@navigation/nav_graph"/>

        </LinearLayout>


    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>