<?xml version="1.0" encoding="utf-8"?>
<MotionScene xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <!--    移动规则设定-->
    <Transition
        app:constraintSetEnd="@+id/end"
        app:constraintSetStart="@id/start"
        app:duration="1000">

        <!--        包含于Transition元素，用来设置动画等触发方式-->


        <!--        OnSwipe ：用户在布局上滑动触发-->
        <!--        touchAnchorId ：受滑动影响的控件id,手势滑动之后收到影响的控件-->
        <!--        touchAnchorSide ：滑动所固定到的目标视图的一侧。MotionLayout 将尝试在该固定点与用户手指之间保持恒定的距离。可接受的值包括 "left"、"right"、"top" 和 "bottom"。-->
        <!--        dragDirection ：用户滑动动作的方向。如果设置了此属性，将仅适用于沿特定方向的滑动。可接受的值包括 "dragLeft"、"dragRight"、"dragUp" 和 "dragDown"-->
        <!--        dragScale ：控制视图相对于滑动长度的移动距离。默认值为 1，表明视图移动的距离应与滑动距离一致。如果 dragScale 小于 1，视图移动的距离会远远小于滑动距离（例如，dragScale 为 0.5 意味着如果滑动移动 4 厘米，目标视图会移动 2 厘米）。如果 dragScale 大于 1，视图移动的距离会大于滑动距离（例如，dragScale 为 1.5 意味着如果滑动移动 4 厘米，目标视图会移动 6 厘米）。-->
        <!--        maxVelocity ：目标视图的最大速-->
        <!--        maxAcceleration ：目标视图的最大加速度。-->
        <OnSwipe
            app:dragDirection="dragDown"
            app:touchAnchorId="@id/pager"
            app:touchAnchorSide="end" />

        <!--        OnCLick ：点击触发-->
        <!--        transitionToStart：从当前状态跳到 constraintSetStart 属性指定的状态，有动画效果。-->
        <!--        transitionToEnd：从当前状态跳到 constraintSetEnd 属性指定的状态，有动画效果。-->
        <!--        jumpToStart：从当前状态切换到 constraintSetStart 属性指定的状态，无动画效果。-->
        <!--        jumpToEnd：从当前状态切换到 constraintSetEnd 属性指定的状态，无动画效果。-->
        <!--        toggle：在transitionToStart和constraintSetEnd状态之间使用动画反复切换。每次点击从一种状态切换到另一种状态。-->
        <!--        clickAction : 点击时要执行的操作，支持的值包括。就是点击之后需要执行的操作，有以上五种-->

        <!--        targetId ：希望被点击后触发动画的视图id。当用户点击此视图时开始动画-->
        <!--        <OnClick-->
        <!--            app:clickAction="transitionToEnd"-->
        <!--            app:targetId="@id/iv_comment" />-->


        <!--        设定view具体如何移动 KeyFrameSet这个元素用来描述一系列运动过程中的关键帧。我们可以利用其使动画效果变的更复杂-->
        <!--        子元素KeyPosition、KeyAttribute、KeyCycle、KeyTimeCycle、KeyTrigger-->

        <!--        KeyPosition：
                    motionTarget：受到影响的id，就是要执行对应移动的控件id

                    framePosition：是这个关键帧的位置取值为0 到 100 之间的整数。这里取值50就是指动画进行到一半的位置。当前控制的组件就已经到达对应位置。结合percentX/Y进行定位。

                    percentX/percentY：是指控件到达motion:framePosition点时的位置，是个float值。
                    这两个属性的具体意义需要根据motion:keyPositionType的类型来定，
                    其中包括parentRelative，deltaRelative，pathRelative这三种类型。具体的意思会在下面的属性讲解里说明。

                    keyPositionType：指定percentX/percentY的坐标系。从左到右（0，1）、从上到下（0，1）所以圆点坐标为（0，0）
                    属性deltaRelative，以constraintSetStart指定的位置为原点（组件的中心点）
                    属性parentRelative，以屏幕坐标轴左上方为原点
                    刷新pathRelative，以constraintSetStart指定的位置为原点，链接动画开始点和结束点为X轴，X轴顺时针旋转90度为Y轴，0为坐标原点，1为动画开始点和结束点连线距离

        -->


        <!--        KeyAttribute
                    设置view的属性：缩放、透明度等
        -->

        <KeyFrameSet>

            <!--         关键帧的添加   例如：坐标原点，(0,0)开始，动画进度70%时，组件到达原来的左侧的50%宽度的位置-->
            <KeyPosition
                app:framePosition="70"
                app:keyPositionType="deltaRelative"
                app:motionTarget="@+id/iv_comment"
                app:percentX="0.5"
                app:percentY="0" />

            <KeyAttribute
                android:alpha="0"
                app:framePosition="30"
                app:motionTarget="@+id/attention" />

            <KeyAttribute
                android:alpha="1"
                android:scaleX="0.5"
                android:scaleY="0.5"
                app:framePosition="80"
                app:motionTarget="@+id/attention" />


        </KeyFrameSet>

    </Transition>


    <!--    对应MotionLayout所有的动画子控件都要在start/end中声明,用于确定起始和结束位置-->
    <ConstraintSet android:id="@+id/start">
        <Constraint
            android:id="@+id/iv_main"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_constraintTop_toTopOf="parent" />

        <Constraint
            android:id="@+id/iv_comment"
            android:layout_width="@dimen/dp_50"
            android:layout_height="@dimen/dp_50"
            android:layout_marginEnd="@dimen/dp_15"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent" />


        <!--        存在尺寸变化的View要用最大宽度适配-->
        <Constraint
            android:id="@+id/user_name"
            android:layout_width="@dimen/dp_100"
            android:layout_height="@dimen/dp_40"
            android:layout_marginStart="@dimen/dp_15"
            android:text="我是谁"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintTop_toTopOf="parent">
            <CustomAttribute
                app:attributeName="textSize"
                app:customFloatValue="20" />
        </Constraint>


        <Constraint
            android:id="@+id/attention"
            android:layout_width="@dimen/dp_100"
            android:layout_height="@dimen/dp_60"
            android:text="关注"
            app:layout_constraintLeft_toRightOf="@+id/user_name" />


    </ConstraintSet>

    <ConstraintSet android:id="@+id/end">
        <Constraint
            android:id="@+id/iv_main"
            android:layout_width="match_parent"
            android:layout_height="@dimen/dp_200"
            app:layout_constraintTop_toTopOf="parent" />

        <Constraint
            android:id="@+id/iv_comment"
            android:layout_width="@dimen/dp_30"
            android:layout_height="@dimen/dp_30"
            android:layout_marginEnd="@dimen/dp_75"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintRight_toRightOf="parent" />


        <Constraint
            android:id="@+id/user_name"
            android:layout_width="@dimen/dp_100"
            android:layout_height="@dimen/dp_40"
            android:layout_marginStart="@dimen/dp_15"
            android:text="我是谁"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/iv_main">
            <CustomAttribute
                app:attributeName="textSize"
                app:customFloatValue="14" />
        </Constraint>


        <Constraint
            android:id="@+id/attention"
            android:layout_width="@dimen/dp_100"
            android:layout_height="@dimen/dp_60"
            android:text="关注"
            app:layout_constraintBottom_toBottomOf="@+id/user_name"
            app:layout_constraintLeft_toRightOf="@+id/user_name"
            app:layout_constraintTop_toTopOf="@+id/user_name" />

    </ConstraintSet>
</MotionScene>