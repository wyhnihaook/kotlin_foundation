以VasSonic作为参考实现
参考链接：https://www.pianshen.com/article/78661391273/

由于集成只涉及少部分功能/大部分功能需要前后端+服务端协调开发。所以以当前实现核心流程为基础，重新设计适合项目的功能

VasSonic优势：1.并行加载、2.动态缓存、3.增量更新

1.并行加载
实现原理：在WebView初始化/new的时候，启动子线程下载html中所需的资源内容。在初始化成功后加载html资源优先判断本地是否存在
（WebView在loadUrl的时候才去加载html的资源文件，所以初始化WebView+loadUrl时间 = 总体时间。并行后以两者最大时间为总时间）

2.动态缓存（VasSonic中提供规则可以实现局部刷新，侵入性太强）
实现原理：每次加载完毕页面，都进行保存当前的内容以供下次进入的时候快速打开页面
（如果当前页面被更新过了，在加载完毕之后再重新加载一次）

3.增量更新（bsdiff/bspatch）原生集成/需要服务端配合每次更新后进行补丁包的生成（更新app时全部清空）
（理论上每次打开app的时候会根据当前入口的更新接口返回，进行判断增量包的下载/可以避免动态缓存内容的变更导致页面闪动）


PS：提供本地离线缓存的功能，必须要提供清空本地缓存的功能